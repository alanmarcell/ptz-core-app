{"version":3,"sources":["../dist-esnext/BaseRepositoryFake.js"],"names":["BaseRepositoryFake","db","collectionName","entities","entity","push","Promise","resolve","id","ids","query","options"],"mappings":";;;;;;;;;;AAAA;IACqBA,kB;AACjB,gCAAYC,EAAZ,EAAgBC,cAAhB,EAAgC;AAAA;;AAC5B,aAAKC,QAAL,GAAgB,EAAhB;AACA,aAAKF,EAAL,GAAUA,EAAV;AACA,aAAKC,cAAL,GAAsBA,cAAtB;AACH;;;;0CACiB;AACd,mBAAO,EAAEA,gBAAgB,KAAKA,cAAvB,EAAP;AACH;;;6BACIE,M,EAAQ;AACT,iBAAKD,QAAL,CAAcE,IAAd,CAAmBD,MAAnB;AACA,mBAAOE,QAAQC,OAAR,CAAgBH,MAAhB,CAAP;AACH;;;gCACOI,E,EAAI;AACR,mBAAOF,QAAQC,OAAR,CAAgB,KAAKJ,QAAL,CAAc,CAAd,CAAhB,CAAP;AACH;;;iCACQM,G,EAAK;AACV,mBAAOH,QAAQC,OAAR,CAAgB,KAAKJ,QAArB,CAAP;AACH;;;6BACIO,K,EAAOC,O,EAAS;AACjB,mBAAOL,QAAQC,OAAR,CAAgB,KAAKJ,QAArB,CAAP;AACH;;;;;AAEL;;;kBAvBqBH,kB","file":"BaseRepositoryFake.js","sourcesContent":["// This is a fake repository to be used with subs/mocks\nexport default class BaseRepositoryFake {\n    constructor(db, collectionName) {\n        this.entities = [];\n        this.db = db;\n        this.collectionName = collectionName;\n    }\n    getDbCollection() {\n        return { collectionName: this.collectionName };\n    }\n    save(entity) {\n        this.entities.push(entity);\n        return Promise.resolve(entity);\n    }\n    getById(id) {\n        return Promise.resolve(this.entities[0]);\n    }\n    getByIds(ids) {\n        return Promise.resolve(this.entities);\n    }\n    find(query, options) {\n        return Promise.resolve(this.entities);\n    }\n}\n//# sourceMappingURL=BaseRepositoryFake.js.map"]}