{"version":3,"sources":["../dist-esnext/BaseRepositoryFake.js"],"names":["save","getById","getByIds","find","entities","fakeDbCollection","collectionName","createRepository","curry","url","db","getDbCollection","entity","push","Promise","resolve","id","ids","query","options"],"mappings":";;;;;;QAmBgBA,I,GAAAA,I;QAIAC,O,GAAAA,O;QAGAC,Q,GAAAA,Q;QAGAC,I,GAAAA,I;;AA7BhB;;;;;;AACA;AACO,IAAIC,8BAAW,EAAf;AACP,IAAMC,mBAAmB,EAAEC,gBAAgB,gBAAlB,EAAzB;AACO,IAAMC,8CAAmB,gBAAEC,KAAF,CAAQ,UAACF,cAAD,EAAiBG,GAAjB,EAAyB;AAC7D,YAHOL,QAGP,cAAW,EAAX;AACA,QAAMM,KAAKD,GAAX;AACAJ,qBAAiBC,cAAjB,GAAkCA,cAAlC;AACA,WAAO;AACHI,cADG;AAEHJ,sCAFG;AAGHK,wCAHG;AAIHX,kBAJG;AAKHC,wBALG;AAMHC,0BANG;AAOHC;AAPG,KAAP;AASH,CAb+B,CAAzB;AAcA,IAAMQ,4CAAkB,SAAlBA,eAAkB;AAAA,WAAMN,gBAAN;AAAA,CAAxB;AACA,SAASL,IAAT,CAAcY,MAAd,EAAsB;AACzBR,aAASS,IAAT,CAAcD,MAAd;AACA,WAAOE,QAAQC,OAAR,CAAgBH,MAAhB,CAAP;AACH;AACM,SAASX,OAAT,CAAiBe,EAAjB,EAAqB;AACxB,WAAOF,QAAQC,OAAR,CAAgBX,SAAS,CAAT,CAAhB,CAAP;AACH;AACM,SAASF,QAAT,CAAkBe,GAAlB,EAAuB;AAC1B,WAAOH,QAAQC,OAAR,CAAgBX,QAAhB,CAAP;AACH;AACM,SAASD,IAAT,CAAce,KAAd,EAAqBC,OAArB,EAA8B;AACjC,WAAOL,QAAQC,OAAR,CAAgBX,QAAhB,CAAP;AACH;AACD;AACA","file":"BaseRepositoryFake.js","sourcesContent":["import R from 'ramda';\n// This is a fake repository to be used with subs/mocks\nexport let entities = [];\nconst fakeDbCollection = { collectionName: 'collectionName' };\nexport const createRepository = R.curry((collectionName, url) => {\n    entities = [];\n    const db = url;\n    fakeDbCollection.collectionName = collectionName;\n    return {\n        db,\n        collectionName,\n        getDbCollection,\n        save,\n        getById,\n        getByIds,\n        find,\n    };\n});\nexport const getDbCollection = () => fakeDbCollection;\nexport function save(entity) {\n    entities.push(entity);\n    return Promise.resolve(entity);\n}\nexport function getById(id) {\n    return Promise.resolve(entities[0]);\n}\nexport function getByIds(ids) {\n    return Promise.resolve(entities);\n}\nexport function find(query, options) {\n    return Promise.resolve(entities);\n}\n// }\n//# sourceMappingURL=BaseRepositoryFake.js.map"]}